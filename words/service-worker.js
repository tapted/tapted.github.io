(()=>{"use strict";var e={895:()=>{try{self["workbox:cacheable-response:5.1.4"]&&_()}catch(e){}},913:()=>{try{self["workbox:core:5.1.4"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:5.1.4"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}}},t={};function s(n){if(t[n])return t[n].exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}(()=>{s(913);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}s(80);const t=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,s,n="GET"){this.handler=t(s),this.match=e,this.method=n}}class r extends n{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class i{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:r}=this.findMatchingRoute({url:s,request:e,event:t});let i,o=r&&r.handler;if(!o&&this._defaultHandler&&(o=this._defaultHandler),o){try{i=o.handle({url:s,request:e,event:t,params:n})}catch(e){i=Promise.reject(e)}return i instanceof Promise&&this._catchHandler&&(i=i.catch((n=>this._catchHandler.handle({url:s,request:e,event:t})))),i}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const r of n){let n;const i=r.match({url:e,request:t,event:s});if(i)return n=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=t(e)}setCatchHandler(e){this._catchHandler=t(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let o;function a(t,s,a){let c;if("string"==typeof t){const e=new URL(t,location.href);c=new n((({url:t})=>t.href===e.href),s,a)}else if(t instanceof RegExp)c=new r(t,s,a);else if("function"==typeof t)c=new n(t,s,a);else{if(!(t instanceof n))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});c=t}return(o||(o=new i,o.addFetchListener(),o.addCacheListener()),o).registerRoute(c),c}const c={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},h=e=>{return e||(t=c.runtime,[c.prefix,t,c.suffix].filter((e=>e&&e.length>0)).join("-"));var t},u=new Set,l=(e,t)=>e.filter((e=>t in e)),p=async({request:e,mode:t,plugins:s=[]})=>{const n=l(s,"cacheKeyWillBeUsed");let r=e;for(const e of n)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},d=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const i=await self.caches.open(e),o=await p({plugins:r,request:t,mode:"read"});let a=await i.match(o,n);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;a=await r.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:a,request:o})}return a},f=async({cacheName:t,request:s,response:n,event:r,plugins:i=[],matchOptions:o})=>{const a=await p({plugins:i,request:s,mode:"write"});if(!n)throw new e("cache-put-with-no-response",{url:(c=a.url,new URL(String(c),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var c;const h=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let r=t,i=!1;for(const t of n)if("cacheWillUpdate"in t){i=!0;const n=t.cacheWillUpdate;if(r=await n.call(t,{request:e,response:r,event:s}),!r)break}return i||(r=r&&200===r.status?r:void 0),r||null})({event:r,plugins:i,response:n,request:a});if(!h)return;const f=await self.caches.open(t),g=l(i,"cacheDidUpdate"),m=g.length>0?await d({cacheName:t,matchOptions:o,request:a}):null;try{await f.put(a,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of u)await e()}(),e}for(const e of g)await e.cacheDidUpdate.call(e,{cacheName:t,event:r,oldResponse:m,newResponse:h,request:a})},g=d,m=async({request:t,fetchOptions:s,event:n,plugins:r=[]})=>{if("string"==typeof t&&(t=new Request(t)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const i=l(r,"fetchDidFail"),o=i.length>0?t.clone():null;try{for(const e of r)if("requestWillFetch"in e){const s=e.requestWillFetch,r=t.clone();t=await s.call(e,{request:r,event:n})}}catch(t){throw new e("plugin-error-request-will-fetch",{thrownError:t})}const a=t.clone();try{let e;e="navigate"===t.mode?await fetch(t):await fetch(t,s);for(const t of r)"fetchDidSucceed"in t&&(e=await t.fetchDidSucceed.call(t,{event:n,request:a,response:e}));return e}catch(e){for(const t of i)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:o.clone(),request:a.clone()});throw e}};s(873);const w={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};s(895);class _{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),t}}a(new RegExp("/.*"),new class{constructor(e={}){if(this._cacheName=h(e.cacheName),e.plugins){const t=e.plugins.some((e=>!!e.cacheWillUpdate));this._plugins=t?e.plugins:[w,...e.plugins]}else this._plugins=[w];this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:t,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const r=[];let i;if(this._networkTimeoutSeconds){const{id:e,promise:o}=this._getTimeoutPromise({request:s,event:t,logs:n});i=e,r.push(o)}const o=this._getNetworkPromise({timeoutId:i,request:s,event:t,logs:n});r.push(o);let a=await Promise.race(r);if(a||(a=await o),!a)throw new e("no-response",{url:s.url});return a}_getTimeoutPromise({request:e,logs:t,event:s}){let n;return{promise:new Promise((t=>{n=setTimeout((async()=>{t(await this._respondFromCache({request:e,event:s}))}),1e3*this._networkTimeoutSeconds)})),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,event:n}){let r,i;try{i=await m({request:t,event:n,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){r=e}if(e&&clearTimeout(e),r||!i)i=await this._respondFromCache({request:t,event:n});else{const e=i.clone(),s=f({cacheName:this._cacheName,request:t,response:e,event:n,plugins:this._plugins});if(n)try{n.waitUntil(s)}catch(e){}}return i}_respondFromCache({event:e,request:t}){return g({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}({cacheName:"pages",plugins:[new class{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new _(e)}}({statuses:[200]})]})),a(new RegExp("https://cdn.jsdelivr.net/.*"),new class{constructor(e={}){if(this._cacheName=h(e.cacheName),this._plugins=e.plugins||[],e.plugins){const t=e.plugins.some((e=>!!e.cacheWillUpdate));this._plugins=t?e.plugins:[w,...e.plugins]}else this._plugins=[w];this._fetchOptions=e.fetchOptions,this._matchOptions=e.matchOptions}async handle({event:t,request:s}){"string"==typeof s&&(s=new Request(s));const n=this._getFromNetwork({request:s,event:t});let r,i=await g({cacheName:this._cacheName,request:s,event:t,matchOptions:this._matchOptions,plugins:this._plugins});if(i){if(t)try{t.waitUntil(n)}catch(r){}}else try{i=await n}catch(e){r=e}if(!i)throw new e("no-response",{url:s.url,error:r});return i}async _getFromNetwork({request:e,event:t}){const s=await m({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=f({cacheName:this._cacheName,request:e,response:s.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(e){}return s}})})()})();